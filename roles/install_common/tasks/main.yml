---

# Check node roles and deployment mode
- assert:
    that: true

- include_tasks: 
    file: default_credentials.yml

- name: Check if Kasm is installed
  stat: 
    path: /opt/kasm/current
  register: kasm_path

- set_fact:
    kasm_installed: "{{ kasm_path.stat.exists }}"

- set_fact:
    web_ip : "{{ (
                   groups[kasm_web_group_name]
                     | map('extract', hostvars)
                       | selectattr('ansible_default_ipv4', 'defined')
                         | map(attribute='ansible_default_ipv4') | list
                           | first
                 ).address }}"
    # IP of the host that ansible is being ran against
    target_ip: "{{ ansible_default_ipv4.address }}"
  when:
    - kasm_mode == 'multi'

- set_fact:
    db_ip : "{{ (
                  groups[kasm_db_group_name]
                    | map('extract', hostvars)
                      | selectattr('ansible_default_ipv4', 'defined')
                        | map(attribute='ansible_default_ipv4') | list
                          | first
                ).address }}"
  when:
    - not kasm_database_hostname
    - kasm_mode == 'multi'

- set_fact:
    db_ip: "{{ kasm_database_hostname }}"
  when:
    - kasm_database_hostname
    - kasm_mode == 'multi'

- set_fact:
    redis_ip : "{{ (
                     groups[kasm_db_group_name]
                       | map('extract', hostvars)
                         | selectattr('ansible_default_ipv4', 'defined')
                           | map(attribute='ansible_default_ipv4') | list
                             | first
                   ).address }}"
  when:
    - not kasm_redis_hostname
    - kasm_mode == 'multi'

- set_fact:
    redis_ip: "{{ kasm_redis_hostname }}"
  when:
    - kasm_redis_hostname
    - kasm_mode == 'multi'

- name: Override manager hostname if configured
  set_fact:
    web_ip: "{{ kasm_manager_hostname }}"
  when:
    - kasm_manager_hostname is defined
    - kasm_mode == 'multi'

- name: Create temporary directory
  tempfile:
    state: directory
  register: tempdir

# Debian 10 doesn't ship with the ca-certificates package installed by default
# installing curl is portable to ensure that ca-certificates is installed
- name: Ensure we have curl installed
  package:
    name: curl
    state: present
  become: true

- include_tasks:
    file: copy_installer.yml
  when:
    - not kasm_installed

- name: Add additional zones tasks
  include_tasks:
    file: add_zones.yml
  when:
    - not kasm_installed

- name: Run install tasks
  include_tasks:
    file: install.yml
  when:
    - not kasm_installed

- name: Enable the docker service to run at boot
  service:
    name: docker
    enabled: true
  become: true
  when:
    - kasm_start_docker_on_boot
  
- name: Delete temporary directory
  file:
    path: "{{ tempdir.path }}"
    state: absent
  become: true

- name: Print credentials
  debug:
    msg:
      - "Database Password: {{ kasm_database_password }}"
      - "Redis Password: {{ kasm_redis_password }}"
      - "Manager Token: {{ kasm_manager_token }}"
      - "Registration Token: {{ kasm_registration_token }}"
      - "user@kasm.local password: {{ kasm_user_password }}"
      - "admin@kasm.local password: {{ kasm_admin_password }}"
  run_once: true

- name: Write credentials to inventory
  run_once: true
  delegate_to: localhost
  ansible.builtin.template:
    src: "{{ inventory_file }}"
    dest: "{{ inventory_file }}"

- name: Set credentials to active
  run_once: true
  delegate_to: localhost
  ansible.builtin.replace:
    dest: "{{ inventory_file }}"
    regexp: "{{ item.from }}"
    replace: "{{ item.to }}"
  loop:
    - {from: "#kasm_user_password", to: "kasm_user_password"}
    - {from: "#kasm_admin_password", to: "kasm_admin_password"}
    - {from: "#kasm_database_password", to: "kasm_database_password"}
    - {from: "#kasm_redis_password", to: "kasm_redis_password"}
    - {from: "#kasm_manager_token", to: "kasm_manager_token"}
    - {from: "#kasm_registration_token", to: "kasm_registration_token"}
